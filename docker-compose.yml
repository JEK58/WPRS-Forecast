services:
  wprs-forecast:
    container_name: wprs-forecast
    build:
      context: ./
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: ${DATABASE_URL}
    restart: always
    depends_on:
      - redis
      - db
    labels:
      traefik.enable: true
      traefik.http.routers.wprs-forecast.entrypoints: websecure
      traefik.http.routers.wprs-forecast.middlewares: global-compress
      traefik.http.routers.wprs-forecast.rule: "Host(`wprs-forecast.org`) || Host(`www.wprs-forecast.org`)"
      traefik.http.routers.wprs-forecast.tls.certresolver: letsencrypt
      traefik.http.services.wprs-forecast.loadbalancer.server.port: 3000
    networks:
      - internal
      - coolify

  db:
    image: postgres:16-alpine
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - wprs-forecast-db:/var/lib/postgresql/data
    extra_hosts:
      - "localhost:127.0.0.1"
    ports:
      - "127.0.0.1:5433:5432"
    networks:
      - internal

  backup:
    build:
      context: ./backup
      dockerfile: Dockerfile
      args:
        CLOUDFLARE_ACCESS_KEY_ID: ${CLOUDFLARE_ACCESS_KEY_ID}
        CLOUDFLARE_SECRET_ACCESS_KEY: ${CLOUDFLARE_SECRET_ACCESS_KEY}
        CLOUDFLARE_R2_ENDPOINT: ${CLOUDFLARE_R2_ENDPOINT}
    restart: always
    depends_on:
      - db
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - internal

  redis:
    image: redis:alpine
    restart: always
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - cache:/data
    networks:
      - internal

networks:
  coolify:
    external: true
  internal:
    driver: bridge

volumes:
  wprs-forecast-db:
  cache:
    driver: local
